// <auto-generated />
using System;
using LABMedicine.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LABMedicine.Migrations
{
    [DbContext(typeof(labmedicinebdContext))]
    [Migration("20230501193749_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LABMedicine.Models.AtendimentosModel", b =>
                {
                    b.Property<int>("Codigo_Atendimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Codigo_Atendimento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo_Atendimento"));

                    b.Property<int>("Identificador_Medico")
                        .HasColumnType("int")
                        .HasColumnName("Identificador_Medico");

                    b.Property<int>("Identificador_Paciente")
                        .HasColumnType("int")
                        .HasColumnName("Identificador_Paciente");

                    b.Property<int>("especializacaoClinica")
                        .HasColumnType("int")
                        .HasColumnName("Especialidade_Clinica");

                    b.HasKey("Codigo_Atendimento");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("LABMedicine.Models.EnfermeirosModel", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Identificador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificador"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CadastroCRM_UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cadastro_CRM/UF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("Data_de_Nascimento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituicaoEnsino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Instituicao_de_Ensino");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome_Completo");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.ToTable("Enfermeiros");

                    b.HasData(
                        new
                        {
                            Identificador = 1,
                            CPF = "17486498090",
                            CadastroCRM_UF = "MG-567890",
                            DataNascimento = new DateTime(1990, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            InstituicaoEnsino = "Universidade Federal de Minas Gerais",
                            NomeCompleto = "Camila Rodrigues",
                            Telefone = "3199887766"
                        },
                        new
                        {
                            Identificador = 2,
                            CPF = "45389378008",
                            CadastroCRM_UF = "RJ-678901",
                            DataNascimento = new DateTime(1985, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            InstituicaoEnsino = "Universidade Federal do Rio de Janeiro",
                            NomeCompleto = "Pedro Silva",
                            Telefone = "2199887766"
                        });
                });

            modelBuilder.Entity("LABMedicine.Models.MedicosModel", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Identificador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificador"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CadastroCRM_UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cadastro_CRM/UF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("Data_de_Nascimento");

                    b.Property<int>("EspecializacaoClinica")
                        .HasColumnType("int")
                        .HasColumnName("Especializacao_Clinica");

                    b.Property<int>("EstadoSistema")
                        .HasColumnType("int")
                        .HasColumnName("Estano_no_Sistema");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituicaoEnsino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Instituicao_de_Ensino");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome_Completo");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAtendimentosRealizados")
                        .HasColumnType("int")
                        .HasColumnName("Total_de_Atendimentos_Realizados");

                    b.HasKey("Identificador");

                    b.ToTable("Medicos");

                    b.HasData(
                        new
                        {
                            Identificador = 1,
                            CPF = "78901234567",
                            CadastroCRM_UF = "RJ-123456",
                            DataNascimento = new DateTime(1995, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EspecializacaoClinica = 5,
                            EstadoSistema = 0,
                            Genero = "Feminino",
                            InstituicaoEnsino = "Universidade Federal do Rio de Janeiro",
                            NomeCompleto = "Fernanda Souza",
                            Telefone = "2199887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 2,
                            CPF = "89012345678",
                            CadastroCRM_UF = "MG-345678",
                            DataNascimento = new DateTime(1980, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EspecializacaoClinica = 0,
                            EstadoSistema = 0,
                            Genero = "Masculino",
                            InstituicaoEnsino = "Universidade Federal de Minas Gerais",
                            NomeCompleto = "João Santos",
                            Telefone = "3199887766",
                            TotalAtendimentosRealizados = 0
                        });
                });

            modelBuilder.Entity("LABMedicine.Models.PacientesModel", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Identificador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificador"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContatoEmergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Contato_de_Emergencia");

                    b.Property<string>("Convenio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Convenio");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("Data_de_Nascimento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListaAlergias")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lista_de_Alergias");

                    b.Property<string>("ListaCuidadosEspecificos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lista_de_Cuidados_Especificos");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome_Completo");

                    b.Property<int>("StatusAtendimento")
                        .HasColumnType("int")
                        .HasColumnName("Status_Atendimento");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAtendimentosRealizados")
                        .HasColumnType("int")
                        .HasColumnName("Total_de_Atendimentos_Realizado");

                    b.HasKey("Identificador");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Identificador = 1,
                            CPF = "98765432100",
                            ContatoEmergencia = "27987654321",
                            Convenio = "Bradesco Saúde",
                            DataNascimento = new DateTime(1980, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            ListaAlergias = "Nenhuma",
                            ListaCuidadosEspecificos = "Diabético",
                            NomeCompleto = "Lucas Oliveira",
                            StatusAtendimento = 0,
                            Telefone = "27999887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 2,
                            CPF = "12345678900",
                            ContatoEmergencia = "11987654321",
                            Convenio = "Unimed",
                            DataNascimento = new DateTime(1995, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            ListaAlergias = "Amendoim",
                            ListaCuidadosEspecificos = "Asma",
                            NomeCompleto = "Ana Maria Silva",
                            StatusAtendimento = 0,
                            Telefone = "11999887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 3,
                            CPF = "65432198700",
                            ContatoEmergencia = "21987654321",
                            Convenio = "Amil",
                            DataNascimento = new DateTime(1990, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            ListaAlergias = "Lactose",
                            ListaCuidadosEspecificos = "Hipertensão",
                            NomeCompleto = "Fábio Souza",
                            StatusAtendimento = 0,
                            Telefone = "2199887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 4,
                            CPF = "01234567890",
                            ContatoEmergencia = "31987654321",
                            Convenio = "SulAmérica",
                            DataNascimento = new DateTime(1985, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            ListaAlergias = "Penicilina",
                            ListaCuidadosEspecificos = "Gestante",
                            NomeCompleto = "Renata Santos",
                            StatusAtendimento = 0,
                            Telefone = "31999887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 5,
                            CPF = "56789012345",
                            ContatoEmergencia = "41987654321",
                            Convenio = "Unimed",
                            DataNascimento = new DateTime(1970, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            ListaAlergias = "Nenhuma",
                            ListaCuidadosEspecificos = "Asma",
                            NomeCompleto = "José Silva",
                            StatusAtendimento = 0,
                            Telefone = "41999887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 6,
                            CPF = "23456789012",
                            ContatoEmergencia = "21987654321",
                            Convenio = "Bradesco Saúde",
                            DataNascimento = new DateTime(2000, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            ListaAlergias = "Nenhuma",
                            ListaCuidadosEspecificos = "Diabética",
                            NomeCompleto = "Mariana Oliveira",
                            StatusAtendimento = 0,
                            Telefone = "2199887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 7,
                            CPF = "34567890123",
                            ContatoEmergencia = "31987654321",
                            Convenio = "Unimed",
                            DataNascimento = new DateTime(1992, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            ListaAlergias = "Nenhuma",
                            ListaCuidadosEspecificos = "Hipertensão",
                            NomeCompleto = "Carlos Eduardo",
                            StatusAtendimento = 0,
                            Telefone = "3199887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 8,
                            CPF = "45678901234",
                            ContatoEmergencia = "21987654321",
                            Convenio = "SulAmérica",
                            DataNascimento = new DateTime(1988, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Feminino",
                            ListaAlergias = "Nenhuma",
                            ListaCuidadosEspecificos = "Gestante",
                            NomeCompleto = "Juliana Santos",
                            StatusAtendimento = 0,
                            Telefone = "2199887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 9,
                            CPF = "90223096067",
                            ContatoEmergencia = "31987654321",
                            Convenio = "Bradesco Saúde",
                            DataNascimento = new DateTime(1985, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            ListaAlergias = "Nenhuma",
                            ListaCuidadosEspecificos = "Diabético",
                            NomeCompleto = "Ricardo Rodrigues",
                            StatusAtendimento = 0,
                            Telefone = "3199887766",
                            TotalAtendimentosRealizados = 0
                        },
                        new
                        {
                            Identificador = 10,
                            CPF = "67890123456",
                            ContatoEmergencia = "11987654321",
                            Convenio = "Amil",
                            DataNascimento = new DateTime(1996, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = "Masculino",
                            ListaAlergias = "Nenhuma",
                            ListaCuidadosEspecificos = "Asma",
                            NomeCompleto = "Thiago Alves",
                            StatusAtendimento = 0,
                            Telefone = "1199887766",
                            TotalAtendimentosRealizados = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
